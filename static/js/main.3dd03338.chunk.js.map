{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","buttonClass","changeButtonClass","className","type","id","onClick","e","parseInt","target","Circles","App","state","idx","newClass","Array","i","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGe,SAASA,EAAT,GAA2D,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,kBAGjD,OACI,sBAAKC,UAAU,iBAAf,UACI,wBAAQC,KAAK,SAASC,GAAG,IAAIC,QAAS,SAACC,GAAKL,EAAmBM,SAASD,EAAEE,OAAOJ,IAAK,IAAKF,UAAWF,EAAY,GAAlH,6BACA,wBAAQG,KAAK,SAASC,GAAG,IAAIC,QAAS,SAACC,GAAKL,EAAmBM,SAASD,EAAEE,OAAOJ,IAAK,IAAKF,UAAWF,EAAY,GAAlH,6BACA,wBAAQG,KAAK,SAASC,GAAG,IAAIC,QAAS,SAACC,GAAKL,EAAmBM,SAASD,EAAEE,OAAOJ,IAAK,IAAKF,UAAWF,EAAY,GAAlH,6BACA,wBAAQG,KAAK,SAASC,GAAG,IAAIC,QAAS,SAACC,GAAKL,EAAmBM,SAASD,EAAEE,OAAOJ,IAAK,IAAKF,UAAWF,EAAY,GAAlH,gC,MCTG,SAASS,EAAT,GAAiC,IAAfT,EAAc,EAAdA,YAC7B,OACI,sBAAKE,UAAU,UAAf,UACI,qBAAKA,UAAWF,EAAY,GAA5B,gBACA,qBAAKE,UAAWF,EAAY,GAA5B,eACA,qBAAKE,UAAWF,EAAY,GAA5B,eACA,qBAAKE,UAAWF,EAAY,GAA5B,kB,ICsBGU,E,4MAxBbC,MAAM,CACJX,YAAa,CAAC,GAAG,GAAG,GAAG,K,EAE1BC,kBAAkB,SAACW,GAEjB,IADA,IAAMC,EAAW,IAAIC,MAAM,GAClBC,EAAI,EAAGA,EAAE,EAAEA,IACRF,EAASE,GAAnBA,IAAIH,EAAmB,WAAwB,GAEjD,EAAKI,SAAS,CAAChB,YAAaa,K,4CAG7B,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CAAgBD,kBAAmBgB,KAAKhB,kBAAmBD,YAAaiB,KAAKN,MAAMX,cACnF,cAAC,EAAD,CAASA,YAAaiB,KAAKN,MAAMX,wB,GAlBzBkB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3dd03338.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './CircleSelector.css' \n\nexport default function CircleSelector({buttonClass, changeButtonClass}) {\n\n\n    return (\n        <div className=\"CircleSelector\">\n            <button type=\"button\" id=\"1\" onClick={(e)=>{changeButtonClass((parseInt(e.target.id))-1)}} className={buttonClass[0]}>Select Circle 1</button>\n            <button type=\"button\" id=\"2\" onClick={(e)=>{changeButtonClass((parseInt(e.target.id))-1)}} className={buttonClass[1]}>Select Circle 2</button>\n            <button type=\"button\" id=\"3\" onClick={(e)=>{changeButtonClass((parseInt(e.target.id))-1)}} className={buttonClass[2]}>Select Circle 3</button>\n            <button type=\"button\" id=\"4\" onClick={(e)=>{changeButtonClass((parseInt(e.target.id))-1)}} className={buttonClass[3]}>Select Circle 4</button>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport './Circles.css'\nexport default function Circles({buttonClass}) {\n    return (\n        <div className=\"Circles\">\n            <div className={buttonClass[0]}> 1</div>\n            <div className={buttonClass[1]}>2</div>\n            <div className={buttonClass[2]}>3</div>\n            <div className={buttonClass[3]}>4</div>\n        </div>\n    )\n}\n","import React, { Component} from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector';\nimport Circles from './components/Circles/Circles'\n\nclass App extends Component {\n  state={\n    buttonClass: ['','','','']\n }\n changeButtonClass=(idx)=>{\n   const newClass = new Array(4)\n   for (let i = 0; i<4;i++){\n     i===idx ? newClass[i]= 'selected':newClass[i]= ''\n   }\n   this.setState({buttonClass: newClass})\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector changeButtonClass={this.changeButtonClass} buttonClass={this.state.buttonClass} />\n          <Circles buttonClass={this.state.buttonClass}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}